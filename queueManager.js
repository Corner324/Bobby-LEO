import moment from 'moment';
import { DiscordRequest } from './utils.js'; // –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

export async function check_more_hour() {
    console.log('üîç –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞–∂–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è...');
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–∞–Ω–∞–ª–µ
      const messagesResponse = await DiscordRequest(process.env.MAIN_CHANNEL_PD, { method: 'GET' });
      const messagesData = await messagesResponse.json();
  
      if (!messagesData || messagesData.length === 0) {
        console.warn('‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
        return;
      }
  
      const idLastMessage = messagesData[0].id;
      const endpointToLastMessage = `${process.env.MAIN_CHANNEL_PD}/${idLastMessage}`;
  
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      const lastMessageResponse = await DiscordRequest(endpointToLastMessage, { method: 'GET' });
      const lastMessageData = await lastMessageResponse.json();
  
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª—è "–°—Ç–∞–∂–µ—Ä—ã" –∏ "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏"
      const probationsField = lastMessageData.embeds?.[0]?.fields?.[1];
      const trainersField = lastMessageData.embeds?.[0]?.fields?.[2];
  
      if (!probationsField) {
        console.warn('‚ö†Ô∏è –ü–æ–ª–µ "–°—Ç–∞–∂–µ—Ä—ã" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ embed-—Å–æ–æ–±—â–µ–Ω–∏–∏.');
        return;
      }
  
      let probationsList = probationsField.value ? probationsField.value.split('\n\u200B') : [];
  
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–∂–µ—Ä–æ–≤ –∏ —É–¥–∞–ª—è–µ–º —Ç–µ—Ö, –∫—Ç–æ –∂–¥–µ—Ç –±–æ–ª–µ–µ 1 —á–∞—Å–∞
      const currentTime = moment().unix();
      let removedCount = 0;
  
      for (let i = probationsList.length - 1; i >= 0; i--) {
        const timeMatch = probationsList[i].match(/<t:(\d+):R>/);
        if (timeMatch) {
          const timeAdded = parseInt(timeMatch[1], 10); // Unix-–≤—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
          const timeDiffMinutes = (currentTime - timeAdded) / 60;
  
          if (timeDiffMinutes > 60) { // 60 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è
            console.log(`‚è∞ –°—Ç–∞–∂–µ—Ä ${probationsList[i]} –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏ (–ø—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: ${Math.floor(timeDiffMinutes)} –º–∏–Ω—É—Ç).`);
            probationsList.splice(i, 1); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞–∂–µ—Ä–∞
            removedCount++;
          }
        } else {
          console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞: "${probationsList[i]}"`);
        }
      }
  
      if (removedCount > 0) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ "–°—Ç–∞–∂–µ—Ä—ã" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        probationsField.value = probationsList.length > 0 ? probationsList.join('\n\u200B') : '\u200B';
  
        await DiscordRequest(endpointToLastMessage, {
          method: 'PATCH',
          body: { embeds: [lastMessageData.embeds[0]] },
        });
  
        console.log(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞–∂–µ—Ä–æ–≤: ${removedCount}.`);
      } else {
        console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ —Å—Ç–∞–∂–µ—Ä—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è.');
      }
  
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ check_more_hour:', error.message);
    }
  }